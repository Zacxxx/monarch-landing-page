/* Nexus Section */
.bg-anim-nexus::before {
  content: '';
  position: absolute;
  inset: -50%; 
  background-image:
    radial-gradient(hsl(var(--accent)/0.15) 1px, transparent 1.5px),
    radial-gradient(hsl(var(--primary)/0.1) 1px, transparent 1.5px);
  background-size: 40px 40px, 60px 60px;
  background-position: 0 0, 20px 20px;
  animation: nexusMatrix 20s linear infinite;
  z-index: 0;
}

@keyframes nexusMatrix {
  0% { 
    transform: translate(0, 0) rotate(0deg);
    background-position: 0 0, 20px 20px;
  }
  25% {
    transform: translate(-10px, 10px) rotate(1deg);
    background-position: -20px 20px, 0px 40px;
  }
  50% {
    transform: translate(0, 20px) rotate(0deg);
    background-position: 0 40px, 20px 60px;
  }
  75% {
    transform: translate(10px, 10px) rotate(-1deg);
    background-position: 20px 20px, 40px 40px;
  }
  100% { 
    transform: translate(0, 0) rotate(0deg);
    background-position: 0 0, 20px 20px;
  }
}

.nexus-pulse-glow { 
  animation: nexusTitlePulse 4s infinite ease-in-out;
}

@keyframes nexusTitlePulse {
  0%, 100% { 
    transform: scale(1);
    opacity: 1;
  }
  50% { 
    transform: scale(1.02);
    opacity: 0.95;
  }
}

/* Algorithm Section */
.bg-anim-algorithm {
  background-color: hsl(var(--secondary));
}
.bg-anim-algorithm::before {
  content: '';
  position: absolute;
  inset: 0;
  background:
    linear-gradient(45deg, hsla(var(--foreground), 0.1) 25%, transparent 25%, transparent 75%, hsla(var(--foreground), 0.1) 75%), 
    linear-gradient(45deg, hsla(var(--foreground), 0.1) 25%, transparent 25%, transparent 75%, hsla(var(--foreground), 0.1) 75%) 30px 30px; 
  background-size: 60px 60px;
  opacity: 0.6; 
  animation: subtleDataFlow 20s linear infinite;
  z-index: 0;
}
@keyframes subtleDataFlow {
    0% { background-position: 0 0, 30px 30px; }
    100% { background-position: 60px 60px, 90px 90px; }
}

/* Algorithm Glitch Effect */
.algorithm-text-glitch {
    position: relative;
    text-shadow: 0.05em 0 0 hsl(var(--accent)/0.6), -0.025em -0.05em 0 hsl(var(--primary)/0.6), 0.025em 0.05em 0 hsl(var(--destructive)/0.6);
    animation: glitch 750ms infinite;
}

@keyframes glitch {
  0% { text-shadow: 0.05em 0 0 hsl(var(--accent)/0.6), -0.025em -0.05em 0 hsl(var(--primary)/0.6), 0.025em 0.05em 0 hsl(var(--destructive)/0.6); }
  15% { text-shadow: 0.05em 0 0 hsl(var(--accent)/0.6), -0.025em -0.05em 0 hsl(var(--primary)/0.6), 0.025em 0.05em 0 hsl(var(--destructive)/0.6); }
  16% { text-shadow: -0.05em -0.025em 0 hsl(var(--accent)/0.6), 0.025em 0.05em 0 hsl(var(--primary)/0.6), -0.05em -0.0125em 0 hsl(var(--destructive)/0.6); }
  49% { text-shadow: -0.05em -0.025em 0 hsl(var(--accent)/0.6), 0.025em 0.05em 0 hsl(var(--primary)/0.6), -0.05em -0.0125em 0 hsl(var(--destructive)/0.6); }
  50% { text-shadow: 0.025em 0.05em 0 hsl(var(--accent)/0.6), 0.05em 0 0 hsl(var(--primary)/0.6), 0 -0.05em 0 hsl(var(--destructive)/0.6); }
  99% { text-shadow: 0.025em 0.05em 0 hsl(var(--accent)/0.6), 0.05em 0 0 hsl(var(--primary)/0.6), 0 -0.05em 0 hsl(var(--destructive)/0.6); }
  100% { text-shadow: -0.025em 0 0 hsl(var(--accent)/0.6), -0.025em -0.025em 0 hsl(var(--primary)/0.6), -0.025em -0.05em 0 hsl(var(--destructive)/0.6); }
}

/* Styles for Tech Showcase in AlgorithmSection */
.tech-showcase-item {
  border: 1px solid hsl(var(--border) / 0.7);
  padding: 0.5rem 1rem;
  font-family: var(--font-mono);
  font-size: 0.875rem;
  line-height: 1.25rem;
  color: hsl(var(--muted-foreground));
  background-color: hsl(var(--background) / 0.5);
  backdrop-filter: blur(2px);
  border-radius: var(--radius);
  transition: all 0.2s ease-in-out;
  box-shadow: 0 2px 4px hsl(var(--primary) / 0.05);
}
.tech-showcase-item:hover {
  color: hsl(var(--accent-foreground));
  background-color: hsl(var(--accent) / 0.6);
  border-color: hsl(var(--accent));
  transform: translateY(-2px) scale(1.03);
  box-shadow: 0 5px 15px hsl(var(--accent) / 0.2);
}

/* Singularity Section - Custom Optimized Background Animation */
.bg-anim-singularity {
  background: linear-gradient(135deg, hsl(var(--background)) 0%, hsl(var(--secondary)/0.3) 50%, hsl(var(--background)) 100%);
  position: relative;
  overflow: hidden;
}

.bg-anim-singularity::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: 
    radial-gradient(circle at 25% 25%, hsl(var(--primary)/0.1) 0%, transparent 30%),
    radial-gradient(circle at 75% 75%, hsl(var(--accent)/0.08) 0%, transparent 25%),
    radial-gradient(circle at 50% 50%, hsl(var(--primary)/0.05) 0%, transparent 40%);
  animation: singularityFlow 25s ease-in-out infinite;
  z-index: 0;
}

.bg-anim-singularity::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    linear-gradient(45deg, transparent 49%, hsl(var(--primary)/0.03) 50%, transparent 51%),
    linear-gradient(-45deg, transparent 49%, hsl(var(--accent)/0.02) 50%, transparent 51%);
  background-size: 80px 80px, 120px 120px;
  animation: singularityGrid 30s linear infinite;
  z-index: 1;
}

@keyframes singularityFlow {
  0%, 100% {
    transform: rotate(0deg) scale(1);
    opacity: 0.6;
  }
  25% {
    transform: rotate(90deg) scale(1.1);
    opacity: 0.8;
  }
  50% {
    transform: rotate(180deg) scale(0.9);
    opacity: 0.7;
  }
  75% {
    transform: rotate(270deg) scale(1.05);
    opacity: 0.9;
  }
}

@keyframes singularityGrid {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(80px, 80px);
  }
}

.singularity-wave {
  animation: singularityWave 1s cubic-bezier(0.4, 0, 0.2, 1) forwards !important;
}

@keyframes singularityWave {
  0% {
    transform: scale(1);
    filter: blur(0);
  }
  20% {
    transform: scale(1.1);
    filter: blur(2px);
  }
  40% {
    transform: scale(0.95);
    filter: blur(1px);
  }
  60% {
    transform: scale(1.05);
    filter: blur(0.5px);
  }
  80% {
    transform: scale(0.98);
    filter: blur(0.2px);
  }
  100% {
    transform: scale(1);
    filter: blur(0);
  }
}

.singularity-text-focus {
  animation: focusIn 2s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
}

.animate-fade-in {
  animation: fadeIn 0.5s ease-out forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.singularity-stat {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1rem 2rem;
  background: hsl(var(--background) / 0.5);
  backdrop-filter: blur(8px);
  border-radius: var(--radius);
  border: 1px solid hsl(var(--border) / 0.5);
  transition: all 0.3s ease;
}

.singularity-stat:hover {
  transform: translateY(-5px);
  border-color: hsl(var(--primary) / 0.5);
  box-shadow: 0 10px 30px hsl(var(--primary) / 0.1);
} 